FROM alpine:3.13 as builder

ARG version

RUN apk update && apk add --no-cache \
  `# install tools` \
  git g++ gcc gdb make cmake py3-pytest python3 valgrind \
  `# install clamav dependencies` \
  bzip2-dev check-dev curl-dev json-c-dev libxml2-dev \
  linux-headers ncurses-dev openssl-dev pcre2-dev zlib-dev

WORKDIR /clamav

RUN git clone --recursive --depth 1 --branch clamav-${version} https://github.com/Cisco-Talos/clamav.git ./

RUN mkdir build; \
    cd build; \
    cmake .. \
      -D APP_CONFIG_DIRECTORY=/etc/clamav \
      -D DATABASE_DIRECTORY=/var/lib/clamav \
      -D ENABLE_CLAMONACC=OFF \
      -D ENABLE_EXAMPLES=OFF \
      -D ENABLE_JSON_SHARED=ON \
      -D ENABLE_MAN_PAGES=OFF \
      -D ENABLE_MILTER=OFF \
      -D ENABLE_STATIC_LIB=OFF \
      -D CMAKE_BUILD_TYPE=RelWithDebuginfo \
      -D CMAKE_INSTALL_PREFIX="" \
      -D CMAKE_INSTALL_LIBDIR=lib; \
    cmake --build .; \
    ctest; \
    cmake --build . --target install -- DESTDIR="/clamav_temp"

RUN rm -r "/clamav_temp/include" "/clamav_temp/lib/pkgconfig/"


FROM alpine:3.13 as app

RUN apk add --no-cache \
        fts \
        json-c \
        libbz2 \
        libcurl \
        libltdl \
        libstdc++ \
        libxml2 \
        ncurses-libs \
        pcre2 \
        zlib

COPY --from=builder /clamav_temp /

RUN addgroup -S "clamav" && \
    adduser -D -G "clamav" -h "/var/lib/clamav" -s "/bin/false" -S "clamav" && \
    install -d -m 755 -g "clamav" -o "clamav" "/var/log/clamav"

RUN apk update && apk add --no-cache tini

ENTRYPOINT ["tini", "--"]